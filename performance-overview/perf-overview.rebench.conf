# -*- mode: yaml -*-
# Config file for ReBench
standard_experiment: all
standard_data_file: 'perf-overview.data'

statistics:
    confidence_level: 0.95

runs:
    number_of_data_points: 10

quick_runs:
    number_of_data_points: 3
    max_time: 60   # time in seconds

# definition of benchmark suites
benchmark_suites:
    macro-steady:
        performance_reader: LogPerformance
        command: " -cp Smalltalk:Examples/Benchmarks/Richards:Examples/Benchmarks/DeltaBlue Examples/Benchmarks/BenchmarkHarness.som  %(benchmark)s "
        max_runtime: 60000
        benchmarks:
            - Richards:
                extra_args: "15 0 100"
                warmup: 5
            - DeltaBlue:
                extra_args: "50 0 10000"
                warmup: 40

    macro-steady-java:
        performance_reader: LogPerformance
        location: ../implementations/classic-benchmarks
        command: " %(benchmark)s "
        max_runtime: 600
        benchmarks:
            - Richards:
                extra_args: "14 0 100"
                warmup: 4
            - DeltaBlue:
                extra_args: "13 0 10000"
                warmup: 3
            - Mandelbrot:
                extra_args: "1000 20"
                warmup: 10

    macro-steady-C:
        performance_reader: LogPerformance
        location: ../implementations/classic-benchmarks
        command: " %(benchmark)s "
        max_runtime: 600
        benchmarks:
            - mandelbrot-c:
                extra_args: "1000 20"
                warmup: 10

    macro-steady-pypy:
        performance_reader: LogPerformance
        location: ../implementations/classic-benchmarks
        command: " %(benchmark)s "
        max_runtime: 600
        benchmarks:
            - richards.py:
                extra_args: "13 0 100"
                warmup: 3
            - deltablue.py:
                extra_args: "13 0 10000"
                warmup: 3
            - mandelbrot.py:
                extra_args: "1000 20"
                warmup: 10

# VMs have a name and are specified by a path and the binary to be executed
virtual_machines:
    Java7:
        path: ../implementations/
        binary: java7.sh
        args: -server
    Java7-Int:
        path: ../implementations/
        binary: java7.sh
        args: -Xint
    Java8:
        path: ../implementations/
        binary: java8.sh
        args: -server
    Java8-Int:
        path: ../implementations/
        binary: java8.sh
        args: -Xint
    Graal:
        path: ../implementations/
        binary: graal.sh
        args: ""
    PyPy:
        path: /usr/bin/
        binary: env
        args: "pypy"
    TruffleSOM-interpreter:
        path: TruffleSOM
        binary: som.sh
        args: ""
    TruffleSOM-graal:
        path: TruffleSOM
        binary: ../graal/mxtool/mx
        args: " --vm server vm -G:-TraceTruffleInlining -G:-TraceTruffleCompilation -Xbootclasspath/a:build/classes:../graal/truffle.jar som.vm.Universe"
    RTruffleSOM-interpreter:
        path: RTruffleSOM
        binary: RTruffleSOM-no-jit
        args: ""
    RTruffleSOM-jit:
        path: RTruffleSOM
        binary: RTruffleSOM-jit
        args: ""
    SOMpp:
        path: SOMpp
        binary: som.sh
        args: ""
    CogVM:
        path: .
        binary: pharo.sh
    C:
        path: /bin/
        binary: sh

experiments:
    C:
        actions:    benchmark
        benchmark:  macro-steady-C
        executions: C
    Java:
        actions:    benchmark
        benchmark:  macro-steady-java
        executions:
            - Java7
            - Java8
            - Graal
    #LuaJIT:
    #    actions:    benchmark
    #    benchmark:  macro-steady-lua
    #    executions: LuaJIT
    # CogVM:
    #     actions: benchmark
    #     benchmark: macro-steady-cogvm
    #     executions: CogVM
    PyPy:
        actions:    benchmark
        benchmark:  macro-steady-pypy
        executions: PyPy
    # SOM:
    #     description: All benchmarks on SOM
    #     actions: benchmark
    #     benchmark:
    #         - macro-steady
    #     executions:
    #         - TruffleSOM-interpreter
    #         - TruffleSOM-graal
    #         - RTruffleSOM-interpreter
    #         - RTruffleSOM-jit
    #         #- SOMpp
